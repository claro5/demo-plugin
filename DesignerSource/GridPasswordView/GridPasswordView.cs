//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.34014
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace M215_GridPasswordView
{
    using Smobiler.Core.Controls;
    using Smobiler.Core.RPC;
    using System;

    [MobileModule("M215_GridPasswordView")]
    [MobileType("GridPasswordView")]
    [System.ComponentModel.ToolboxItem(true)]
    public class GridPasswordView : MobileNativeControl
    {

        private MobileProperty _Password;

        private MobileProperty _PasswordType;

        private MobileProperty _PasswordVisibility;

        public event EventHandler TextChanged;

        public GridPasswordView()
        {
            _Password = new MobileProperty("Password", "");
            _PasswordType = new MobileProperty("PasswordType",PwdType.numberPassword);
            _PasswordVisibility = new MobileProperty("PasswordVisibility", false);
            base.RegisterProperties(_Password, _PasswordType, _PasswordVisibility);
        }

        public string Password
        {
            get
            {
                return ((string)(this._Password.Value));
            }
            set
            {
                this._Password.Value = value;
            }
        }

        public PwdType PasswordType
        {
            get
            {
                return ((PwdType)(this._PasswordType.Value));
            }
            set
            {
                this._PasswordType.Value = value;
            }
        }

        public bool PasswordVisibility
        {
            get
            {
                return ((bool)(this._PasswordVisibility.Value));
            }
            set
            {
                this._PasswordVisibility.Value = value;
            }
        }

        [MobileMethod("onTextChanged")]
        public void onTextChanged()
        {
            // parameter参数用于向客户端组件中添加方法参数
            System.Collections.Generic.Dictionary<string, object> parameter = new System.Collections.Generic.Dictionary<string, object>();
            base.CallRPC(this.HandleRPCResult, new RPCParameter(parameter));
        }

        // HandleRPCResult回调方法用于处理在RPC方法调用返回时的处理
        private void HandleRPCResult(object sender, RPCResultArgs e)
        {
        }

        // OnEventRaised用于控件主动事件回调
        protected override void OnEventRaised(System.Collections.Generic.Dictionary<string, object> @params)
        {
           if (@params.Count>0)
            {
                string strpwd= (String)@params["password"];
                if (strpwd.Length == 6)
                    this.Password = strpwd;
 

            }
        }


        public enum PwdType
        {    
            numberPassword,
            textPassword,
            textVisiblePassword
        }
    }
}
